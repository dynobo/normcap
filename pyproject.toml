[tool.poetry]
name = "normcap"
version = "0.2.10"
description = "OCR-powered screen-capture tool to capture information instead of images."
keywords = ["screenshot", "ocr", "capture", "clipboard"]
license = "GPLv3"
authors = ["dynobo <dynobo@mailbox.org>"]
readme = "README.md"
repository = "https://github.com/dynobo/normcap"
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Topic :: Utilities",
    "Topic :: Multimedia :: Graphics :: Capture :: Screen Capture",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Operating System :: MacOS",
]

[tool.poetry.scripts]
normcap = "normcap.app:main"

[tool.poetry.dependencies]
tesserocr = [
    { version = "^2.4.0", platform = "darwin" },
    { version = "^2.4.0", platform = "linux" },
    { version = "2.4.0", platform = "win32" },
]
python = ">=3.7.1,<3.10"
importlib-metadata = "^4.10.0"
importlib-resources = "^5.4.0"
jeepney = "^0.7.1"
PySide2 = "^5.15.2"
packaging = "^21.3"

[tool.poetry.dev-dependencies]
briefcase = "^0.3.5"
black = { version = "^21.12b0", allow-prereleases = true }
isort = "^5.10.1"
mypy = "^0.930"
pre-commit = "^2.16"
pydocstyle = "^6.1.1"
pylint = "^2.12.2"
pytest = "^6.2.5"
pytest-cov = "^3.0.0"
pytest-qt = "^4.0.2"
pytest-xvfb = "^2.0.0"
rope = "^0.22.0"
toml = "^0.10.2"
types-toml = "^0.10.1"
types-requests = "^2.26.2"
mdformat-gfm = "^0.3.5"
coveralls = "^3.3.1"
tbump = "^6.7.0"

[tool.black]
line-length = 88
include = '''
(
    ^/src/tests/.*py
  | ^/src/normcap/.*py
)
'''
exclude = '''
(
    __pycache__
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["src/normcap", "src/tests"]

[tool.mypy]
files = ["src/normcap/**/*.py", "src/tests/**/*.py"]
follow_imports = "skip"

[[tool.mypy.overrides]]
module = "normcap.window_base_ui"
follow_imports = "skip"
ignore_errors = true

[tool.pylint.master]
extension-pkg-allow-list = ["PySide2", "tesserocr"]
jobs = 1

[tool.pylint.'MESSAGES CONTROL']
load-plugins = "pylint.extensions.mccabe"
ignore = "window_base_ui.py"
disable = [
    "duplicate-code",
    "fixme",
    "invalid-name",
    "missing-module-docstring",
    "too-few-public-arguments",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-instance-attributes",
    "wrong-import-position",
]

[tool.pytest.ini_options]
addopts = "--cov normcap --cov-report xml:cov.xml --cov-report html"
testpaths = ["src/tests"]
qt_api = "pyside2"
markers = [
    "skip_on_gh_linux: do not run during CI/CD on github runner linux",
    "skip_on_gh: do not run during CI/CD on github",
]

[build-system]
requires = ["poetry-core>=1.0.0", "briefcase"]
build-backend = "poetry.core.masonry.api"

[tool.briefcase]
project_name = "NormCap"
bundle = "eu.dynobo"
version = "0.2.10"
url = "https://github.com/dynobo/normcap"
license = "GPLv3"
author = 'dynobo'
author_email = "dynobo@mailbox.org"

[tool.briefcase.app.normcap]
formal_name = "NormCap"
description = "OCR-powered screen-capture tool to capture information instead of images"
sources = ["src/normcap"]
icon = "src/normcap/resources/normcap"
installer_icon = "src/normcap/resources/normcap_install"
installer_background = "src/normcap/resources/normcap_install_bg"
requires = [
    "PySide2",
    "jeepney",
    "importlib-metadata",
    "importlib-resources",
    "packaging",
]

[tool.briefcase.app.normcap.macOS]
requires = ["tesserocr==2.4.1"]

[tool.briefcase.app.normcap.linux]
system_requires = ["libtesseract-dev", "libleptonica-dev", "pkg-config"]
requires = ["tesserocr==2.4.1"]

[tool.briefcase.app.normcap.windows]
requires = [
    "https://github.com/simonflueckiger/tesserocr-windows_build/releases/download/tesserocr-v2.4.0-tesseract-4.0.0/tesserocr-2.4.0-cp37-cp37m-win_amd64.whl",
]
[tool.tbump]
# Uncomment this if your project is hosted on GitHub:
# github_url = "https://github.com/<user or organization>/<project>/"

[tool.tbump.version]
current = "0.2.10"

# Example of a semver regexp.
# Make sure this matches current_version before
# using tbump
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  '''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

[[tool.tbump.file]]
src = "pyproject.toml"
search = 'version = "{current_version}"'

[[tool.tbump.file]]
src = "src/normcap/__init__.py"
search = '__version__ = "{current_version}"'

[[tool.tbump.file]]
src = "docs/index.html"

[[tool.tbump.before_commit]]
name = "check changelog"
cmd = "grep -q {new_version} CHANGELOG.md"

# Or run some commands after the git tag and the branch
# have been pushed:
#  [[tool.tbump.after_push]]
#  name = "publish"
#  cmd = "./publish.sh"
