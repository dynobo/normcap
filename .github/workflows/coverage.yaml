name: "coverage.io"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  pytest:
    name: Run pytest
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-12, windows-2022, ubuntu-22.04]
    steps:
      # SETUP ENVIRONMENT
      - uses: actions/checkout@v3
      - name: Install hatch
        run: pipx install hatch
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Prepare Linux
        if: matrix.os  == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install \
            python3-pil \
            tesseract-ocr \
            tesseract-ocr-eng \
            tesseract-ocr-jpn \
            tesseract-ocr-chi-sim \
            xclip
          sudo apt-get install \
            xvfb \
            libxkbcommon-x11-0 \
            libxcb-icccm4 \
            libxcb-image0 \
            libxcb-keysyms1 \
            libxcb-randr0 \
            libxcb-render-util0 \
            libxcb-xinerama0 \
            libxcb-xfixes0 \
            libxcb-shape0 \
            libxcb-cursor0 \
            libegl1 \
            libegl1-mesa
          sudo apt-get install \
            ca-certificates
          echo "XDG_SESSION_TYPE=gnome" >> $GITHUB_ENV

      - name: Prepare macOS
        if: matrix.os  == 'macos-12'
        run: |
          brew install pkg-config tesseract tesseract-lang dylibbundler
          brew info tesseract

      - name: Prepare Windows
        if: matrix.os  == 'windows-2022'
        run: |
          $url = "https://digi.bib.uni-mannheim.de/tesseract/tesseract-ocr-w64-setup-v5.3.0.20221214.exe"
          Invoke-WebRequest -Uri $url -OutFile "tesseract_installer.exe"
          7z x tesseract_installer.exe -O"C:\Program Files\Tesseract-OCR"

          $chi_sim_url = "https://github.com/tesseract-ocr/tessdata_fast/raw/main/chi_sim.traineddata"
          Invoke-WebRequest -Uri $chi_sim_url -OutFile "C:\Program Files\Tesseract-OCR\tessdata\chi_sim.traineddata"
          $jpn_url = "https://github.com/tesseract-ocr/tessdata_fast/raw/main/jpn.traineddata"
          Invoke-WebRequest -Uri $jpn_url -OutFile "C:\Program Files\Tesseract-OCR\tessdata\jpn.traineddata"

          $tesseract = "C:\Program Files\Tesseract-OCR\"
          echo "$tesseract" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "TESSDATA_PREFIX=$tesseract\tessdata" >> $env:GITHUB_ENV
          Set-DisplayResolution -Width 1920 -Height 1080 -Force

      - name: Test tesseract
        run: |
          tesseract --version
          tesseract --list-langs

      - name: Run pytest
        run: hatch run test

      - name: Coveralls Parallel
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ${{ matrix.os }}
          path-to-lcov: coverage.lcov
          parallel: true

  coveralls-upload:
    needs: pytest
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
